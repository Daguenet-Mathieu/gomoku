mvn package -Dmaven.test.skip=true
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------------------< [0;36morg.openjfx:gomoku[0;1m >-------------------------[m
[[1;34mINFO[m] [1mBuilding gomoku 1.0.0[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/madaguen/github/Gomoku/final/gomoku/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:compile[m [1m(default-compile)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 38 source files to /home/madaguen/github/Gomoku/final/gomoku/target/classes
[[1;34mINFO[m] /home/madaguen/github/Gomoku/final/gomoku/src/main/java/org/interfacegui/Map.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /home/madaguen/github/Gomoku/final/gomoku/src/main/java/org/interfacegui/Map.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Not copying test resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Not compiling test sources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Tests are skipped.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-jar-plugin:2.4:jar[m [1m(default-jar)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Building jar: /home/madaguen/github/Gomoku/final/gomoku/target/gomoku-1.0.0.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-assembly-plugin:2.4.1:single[m [1m(make-assembly)[m @ [36mgomoku[0;1m ---[m
[[1;34mINFO[m] Building jar: /home/madaguen/github/Gomoku/final/gomoku/target/gomoku-1.0.0-jar-with-dependencies.jar
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  1.756 s
[[1;34mINFO[m] Finished at: 2025-08-04T22:09:41+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
cp target/gomoku-1.0.0-jar-with-dependencies.jar gomoku.jar
java -jar gomoku.jar
on passe par ici constructeur home page
width : 2560 height : 1408 size : 1408
size x == 352 size y == 352
open img background !
R√©pertoire courant: /home/madaguen/github/Gomoku/final/gomoku
‚úî background.jpg OK : 919.0x576.0
‚úî title.png OK : 427.0x79.0
redimensionnement de home ! largeur = 1.0
redimensionnement de home ! hauteur = 1.0
redimensionnement de home ! largeur = 606.0
redimensionnement de home ! hauteur = 450.0
Go
abs path == ./ filename == tuto/Go.sgf
file == ./tuto/Go.sgf
deepth == 0 file == (;GM[1]FF[4]CA[UTF-8]AP[CGoban:3]ST[2]
RU[Japanese]SZ[9]KM[0.00]
C[Le jeu de Go se joue sur un plateau de 19 lignes et 19 colonnes.
Les pions noirs et blancs, appel√©s "pierres", sont jou√©s sur les intersections.]
;AB[de]C[Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.]
;AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

deepth == 0 next char == ( file == ;GM[1]FF[4]CA[UTF-8]AP[CGoban:3]ST[2]
RU[Japanese]SZ[9]KM[0.00]
C[Le jeu de Go se joue sur un plateau de 19 lignes et 19 colonnes.
Les pions noirs et blancs, appel√©s "pierres", sont jou√©s sur les intersections.]
;AB[de]C[Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.]
;AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par (
deepth == 1 file == ;GM[1]FF[4]CA[UTF-8]AP[CGoban:3]ST[2]
RU[Japanese]SZ[9]KM[0.00]
C[Le jeu de Go se joue sur un plateau de 19 lignes et 19 colonnes.
Les pions noirs et blancs, appel√©s "pierres", sont jou√©s sur les intersections.]
;AB[de]C[Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.]
;AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

deepth == 1 next char == ; file == GM[1]FF[4]CA[UTF-8]AP[CGoban:3]ST[2]
RU[Japanese]SZ[9]KM[0.00]
C[Le jeu de Go se joue sur un plateau de 19 lignes et 19 colonnes.
Les pions noirs et blancs, appel√©s "pierres", sont jou√©s sur les intersections.]
;AB[de]C[Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.]
;AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |GM| et array val |SZ|
tested val : |GM| et array val |HA|
tested val : |GM| et array val |KM|
tested val : |GM| et array val |GM|
type == NUM_VALUEname : GM
tested val : |GM| et array val |SZ|
tested val : |GM| et array val |HA|
tested val : |GM| et array val |KM|
tested val : |GM| et array val |GM|
NUm val pars ==  1
tested val : |FF| et array val |SZ|
tested val : |FF| et array val |HA|
tested val : |FF| et array val |KM|
tested val : |FF| et array val |GM|
tested val : |FF| et array val |B|
tested val : |FF| et array val |W|
tested val : |FF| et array val |AB|
tested val : |FF| et array val |AW|
tested val : |FF| et array val |AE|
type == STRING_VALUEname : FF
tested val : |FF| et array val |SZ|
tested val : |FF| et array val |HA|
tested val : |FF| et array val |KM|
tested val : |FF| et array val |GM|
tested val : |FF| et array val |B|
tested val : |FF| et array val |W|
tested val : |FF| et array val |AB|
tested val : |FF| et array val |AW|
tested val : |FF| et array val |AE|
tested val : |CA| et array val |SZ|
tested val : |CA| et array val |HA|
tested val : |CA| et array val |KM|
tested val : |CA| et array val |GM|
tested val : |CA| et array val |B|
tested val : |CA| et array val |W|
tested val : |CA| et array val |AB|
tested val : |CA| et array val |AW|
tested val : |CA| et array val |AE|
type == STRING_VALUEname : CA
tested val : |CA| et array val |SZ|
tested val : |CA| et array val |HA|
tested val : |CA| et array val |KM|
tested val : |CA| et array val |GM|
tested val : |CA| et array val |B|
tested val : |CA| et array val |W|
tested val : |CA| et array val |AB|
tested val : |CA| et array val |AW|
tested val : |CA| et array val |AE|
tested val : |AP| et array val |SZ|
tested val : |AP| et array val |HA|
tested val : |AP| et array val |KM|
tested val : |AP| et array val |GM|
tested val : |AP| et array val |B|
tested val : |AP| et array val |W|
tested val : |AP| et array val |AB|
tested val : |AP| et array val |AW|
tested val : |AP| et array val |AE|
type == STRING_VALUEname : AP
tested val : |AP| et array val |SZ|
tested val : |AP| et array val |HA|
tested val : |AP| et array val |KM|
tested val : |AP| et array val |GM|
tested val : |AP| et array val |B|
tested val : |AP| et array val |W|
tested val : |AP| et array val |AB|
tested val : |AP| et array val |AW|
tested val : |AP| et array val |AE|
tested val : |ST| et array val |SZ|
tested val : |ST| et array val |HA|
tested val : |ST| et array val |KM|
tested val : |ST| et array val |GM|
tested val : |ST| et array val |B|
tested val : |ST| et array val |W|
tested val : |ST| et array val |AB|
tested val : |ST| et array val |AW|
tested val : |ST| et array val |AE|
type == STRING_VALUEname : ST
tested val : |ST| et array val |SZ|
tested val : |ST| et array val |HA|
tested val : |ST| et array val |KM|
tested val : |ST| et array val |GM|
tested val : |ST| et array val |B|
tested val : |ST| et array val |W|
tested val : |ST| et array val |AB|
tested val : |ST| et array val |AW|
tested val : |ST| et array val |AE|
tested val : |RU| et array val |SZ|
tested val : |RU| et array val |HA|
tested val : |RU| et array val |KM|
tested val : |RU| et array val |GM|
tested val : |RU| et array val |B|
tested val : |RU| et array val |W|
tested val : |RU| et array val |AB|
tested val : |RU| et array val |AW|
tested val : |RU| et array val |AE|
type == STRING_VALUEname : RU
tested val : |RU| et array val |SZ|
tested val : |RU| et array val |HA|
tested val : |RU| et array val |KM|
tested val : |RU| et array val |GM|
tested val : |RU| et array val |B|
tested val : |RU| et array val |W|
tested val : |RU| et array val |AB|
tested val : |RU| et array val |AW|
tested val : |RU| et array val |AE|
tested val : |SZ| et array val |SZ|
type == NUM_VALUEname : SZ
tested val : |SZ| et array val |SZ|
NUm val pars ==  9
tested val : |KM| et array val |SZ|
tested val : |KM| et array val |HA|
tested val : |KM| et array val |KM|
type == NUM_VALUEname : KM
tested val : |KM| et array val |SZ|
tested val : |KM| et array val |HA|
tested val : |KM| et array val |KM|
NUm val pars ==  0.0
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AB[de]C[Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.]
;AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == de
index x == 3
index y == 4
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[de]AW[fa][eb][gb][fc][fe][he][bf][gf][eg][fh]AB[cc][ge][cf][fg]
C[Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.]
;AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == de
index x == 3
index y == 4
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
type == ARRAY_VALUEname : AW
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
val == fa
index x == 5
index y == 0
val == eb
index x == 4
index y == 1
val == gb
index x == 6
index y == 1
val == fc
index x == 5
index y == 2
val == fe
index x == 5
index y == 4
val == he
index x == 7
index y == 4
val == bf
index x == 1
index y == 5
val == gf
index x == 6
index y == 5
val == eg
index x == 4
index y == 6
val == fh
index x == 5
index y == 7
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == cc
index x == 2
index y == 2
val == ge
index x == 6
index y == 4
val == cf
index x == 2
index y == 5
val == fg
index x == 5
index y == 6
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[fa][eb][gb][cc][fc][fe][ge][he][bf][cf][gf][eg][fg][fh]AB[aa][af]
C[Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.]
;AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == fa
index x == 5
index y == 0
val == eb
index x == 4
index y == 1
val == gb
index x == 6
index y == 1
val == cc
index x == 2
index y == 2
val == fc
index x == 5
index y == 2
val == fe
index x == 5
index y == 4
val == ge
index x == 6
index y == 4
val == he
index x == 7
index y == 4
val == bf
index x == 1
index y == 5
val == cf
index x == 2
index y == 5
val == gf
index x == 6
index y == 5
val == eg
index x == 4
index y == 6
val == fg
index x == 5
index y == 6
val == fh
index x == 5
index y == 7
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == aa
index x == 0
index y == 0
val == af
index x == 0
index y == 5
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[aa][af]AW[dd][ce][ee][df]
C[La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.]
;AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == aa
index x == 0
index y == 0
val == af
index x == 0
index y == 5
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
type == ARRAY_VALUEname : AW
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
val == dd
index x == 3
index y == 3
val == ce
index x == 2
index y == 4
val == ee
index x == 4
index y == 4
val == df
index x == 3
index y == 5
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AB[dc][cd][ed]
C[La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.]
;AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == dc
index x == 3
index y == 2
val == cd
index x == 2
index y == 3
val == ed
index x == 4
index y == 3
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[dd]AB[de]
C[Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".]
;AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == dd
index x == 3
index y == 3
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == de
index x == 3
index y == 4
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[dc][cd][ed][ce][de][ee][df]
AW[fa][ha][fb][gb][hb][ib][if][hg][ah][bh][hh][ih][bi][hi]
AB[ea][eb][ec][fc][gc][hc][ic][he][ie][hf][ag][bg][cg][gg][ch][gh][ci][gi]
C[Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.]
;AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == dc
index x == 3
index y == 2
val == cd
index x == 2
index y == 3
val == ed
index x == 4
index y == 3
val == ce
index x == 2
index y == 4
val == de
index x == 3
index y == 4
val == ee
index x == 4
index y == 4
val == df
index x == 3
index y == 5
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
type == ARRAY_VALUEname : AW
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
val == fa
index x == 5
index y == 0
val == ha
index x == 7
index y == 0
val == fb
index x == 5
index y == 1
val == gb
index x == 6
index y == 1
val == hb
index x == 7
index y == 1
val == ib
index x == 8
index y == 1
val == if
index x == 8
index y == 5
val == hg
index x == 7
index y == 6
val == ah
index x == 0
index y == 7
val == bh
index x == 1
index y == 7
val == hh
index x == 7
index y == 7
val == ih
index x == 8
index y == 7
val == bi
index x == 1
index y == 8
val == hi
index x == 7
index y == 8
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == ea
index x == 4
index y == 0
val == eb
index x == 4
index y == 1
val == ec
index x == 4
index y == 2
val == fc
index x == 5
index y == 2
val == gc
index x == 6
index y == 2
val == hc
index x == 7
index y == 2
val == ic
index x == 8
index y == 2
val == he
index x == 7
index y == 4
val == ie
index x == 8
index y == 4
val == hf
index x == 7
index y == 5
val == ag
index x == 0
index y == 6
val == bg
index x == 1
index y == 6
val == cg
index x == 2
index y == 6
val == gg
index x == 6
index y == 6
val == ch
index x == 2
index y == 7
val == gh
index x == 6
index y == 7
val == ci
index x == 2
index y == 8
val == gi
index x == 6
index y == 8
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[ea][fa][ha][eb][fb][gb][hb][ib][ec][fc][gc][hc][ic]
[he][ie][hf][if][ag][bg][cg][gg][hg][ah][bh][ch][gh][hh][ih][bi][ci][gi][hi]
AW[gd][hd][id][ge][gf][gg][gh][gi]
C[Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.]
;AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == ea
index x == 4
index y == 0
val == fa
index x == 5
index y == 0
val == ha
index x == 7
index y == 0
val == eb
index x == 4
index y == 1
val == fb
index x == 5
index y == 1
val == gb
index x == 6
index y == 1
val == hb
index x == 7
index y == 1
val == ib
index x == 8
index y == 1
val == ec
index x == 4
index y == 2
val == fc
index x == 5
index y == 2
val == gc
index x == 6
index y == 2
val == hc
index x == 7
index y == 2
val == ic
index x == 8
index y == 2
val == he
index x == 7
index y == 4
val == ie
index x == 8
index y == 4
val == hf
index x == 7
index y == 5
val == if
index x == 8
index y == 5
val == ag
index x == 0
index y == 6
val == bg
index x == 1
index y == 6
val == cg
index x == 2
index y == 6
val == gg
index x == 6
index y == 6
val == hg
index x == 7
index y == 6
val == ah
index x == 0
index y == 7
val == bh
index x == 1
index y == 7
val == ch
index x == 2
index y == 7
val == gh
index x == 6
index y == 7
val == hh
index x == 7
index y == 7
val == ih
index x == 8
index y == 7
val == bi
index x == 1
index y == 8
val == ci
index x == 2
index y == 8
val == gi
index x == 6
index y == 8
val == hi
index x == 7
index y == 8
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
type == ARRAY_VALUEname : AW
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
val == gd
index x == 6
index y == 3
val == hd
index x == 7
index y == 3
val == id
index x == 8
index y == 3
val == ge
index x == 6
index y == 4
val == gf
index x == 6
index y == 5
val == gg
index x == 6
index y == 6
val == gh
index x == 6
index y == 7
val == gi
index x == 6
index y == 8
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ; file == AE[gd][hd][id][ge][gf][gg][gh][gi]
AW[ea][eb][gb][hb][ib][ec][gc][ic][cd][dd][ed][fd]
[ae][be][ce][fe][ef][eg][eh][fh][ei]
AB[da][bb][db][cc][dc][hc][ad][bd][gd][hd][id]
[ee][ge][ff][fg][gg][gh][fi][gi]
C[Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.])

je passe par ;
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
type == ARRAY_VALUEname : AE
tested val : |AE| et array val |SZ|
tested val : |AE| et array val |HA|
tested val : |AE| et array val |KM|
tested val : |AE| et array val |GM|
tested val : |AE| et array val |B|
tested val : |AE| et array val |W|
tested val : |AE| et array val |AB|
tested val : |AE| et array val |AW|
tested val : |AE| et array val |AE|
val == gd
index x == 6
index y == 3
val == hd
index x == 7
index y == 3
val == id
index x == 8
index y == 3
val == ge
index x == 6
index y == 4
val == gf
index x == 6
index y == 5
val == gg
index x == 6
index y == 6
val == gh
index x == 6
index y == 7
val == gi
index x == 6
index y == 8
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
type == ARRAY_VALUEname : AW
tested val : |AW| et array val |SZ|
tested val : |AW| et array val |HA|
tested val : |AW| et array val |KM|
tested val : |AW| et array val |GM|
tested val : |AW| et array val |B|
tested val : |AW| et array val |W|
tested val : |AW| et array val |AB|
tested val : |AW| et array val |AW|
val == ea
index x == 4
index y == 0
val == eb
index x == 4
index y == 1
val == gb
index x == 6
index y == 1
val == hb
index x == 7
index y == 1
val == ib
index x == 8
index y == 1
val == ec
index x == 4
index y == 2
val == gc
index x == 6
index y == 2
val == ic
index x == 8
index y == 2
val == cd
index x == 2
index y == 3
val == dd
index x == 3
index y == 3
val == ed
index x == 4
index y == 3
val == fd
index x == 5
index y == 3
val == ae
index x == 0
index y == 4
val == be
index x == 1
index y == 4
val == ce
index x == 2
index y == 4
val == fe
index x == 5
index y == 4
val == ef
index x == 4
index y == 5
val == eg
index x == 4
index y == 6
val == eh
index x == 4
index y == 7
val == fh
index x == 5
index y == 7
val == ei
index x == 4
index y == 8
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
type == ARRAY_VALUEname : AB
tested val : |AB| et array val |SZ|
tested val : |AB| et array val |HA|
tested val : |AB| et array val |KM|
tested val : |AB| et array val |GM|
tested val : |AB| et array val |B|
tested val : |AB| et array val |W|
tested val : |AB| et array val |AB|
val == da
index x == 3
index y == 0
val == bb
index x == 1
index y == 1
val == db
index x == 3
index y == 1
val == cc
index x == 2
index y == 2
val == dc
index x == 3
index y == 2
val == hc
index x == 7
index y == 2
val == ad
index x == 0
index y == 3
val == bd
index x == 1
index y == 3
val == gd
index x == 6
index y == 3
val == hd
index x == 7
index y == 3
val == id
index x == 8
index y == 3
val == ee
index x == 4
index y == 4
val == ge
index x == 6
index y == 4
val == ff
index x == 5
index y == 5
val == fg
index x == 5
index y == 6
val == gg
index x == 6
index y == 6
val == gh
index x == 6
index y == 7
val == fi
index x == 5
index y == 8
val == gi
index x == 6
index y == 8
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
type == STRING_VALUEname : C
tested val : |C| et array val |SZ|
tested val : |C| et array val |HA|
tested val : |C| et array val |KM|
tested val : |C| et array val |GM|
tested val : |C| et array val |B|
tested val : |C| et array val |W|
tested val : |C| et array val |AB|
tested val : |C| et array val |AW|
tested val : |C| et array val |AE|
deepth == 1 next char == ) file == 

next == org.ast.Node@43e9e261
next == org.ast.Node@43e9e261
tree == org.ast.Node@3cac0203
jep asse fdans l'exec d'un move : ?
tested val : |GM| et array val |KM|
tested val : |GM| et array val |HA|
tested val : |GM| et array val |GM|
is header : 2 cmd : GM
header : GM
gametype : 1.0
tested val : |FF| et array val |KM|
tested val : |FF| et array val |HA|
tested val : |FF| et array val |GM|
tested val : |FF| et array val |SZ|
tested val : |FF| et array val |RU|
tested val : |FF| et array val |AP|
tested val : |FF| et array val |CA|
tested val : |FF| et array val |FF|
is header : 7 cmd : FF
header : FF
tested val : |CA| et array val |KM|
tested val : |CA| et array val |HA|
tested val : |CA| et array val |GM|
tested val : |CA| et array val |SZ|
tested val : |CA| et array val |RU|
tested val : |CA| et array val |AP|
tested val : |CA| et array val |CA|
is header : 6 cmd : CA
header : CA
tested val : |AP| et array val |KM|
tested val : |AP| et array val |HA|
tested val : |AP| et array val |GM|
tested val : |AP| et array val |SZ|
tested val : |AP| et array val |RU|
tested val : |AP| et array val |AP|
is header : 5 cmd : AP
header : AP
tested val : |ST| et array val |KM|
tested val : |ST| et array val |HA|
tested val : |ST| et array val |GM|
tested val : |ST| et array val |SZ|
tested val : |ST| et array val |RU|
tested val : |ST| et array val |AP|
tested val : |ST| et array val |CA|
tested val : |ST| et array val |FF|
tested val : |ST| et array val |ST|
is header : 8 cmd : ST
header : ST
tested val : |RU| et array val |KM|
tested val : |RU| et array val |HA|
tested val : |RU| et array val |GM|
tested val : |RU| et array val |SZ|
tested val : |RU| et array val |RU|
is header : 4 cmd : RU
header : RU
Rules == Japanese
tested val : |SZ| et array val |KM|
tested val : |SZ| et array val |HA|
tested val : |SZ| et array val |GM|
tested val : |SZ| et array val |SZ|
is header : 3 cmd : SZ
header : SZ
tested val : |KM| et array val |KM|
is header : 0 cmd : KM
header : KM
tested val : |C| et array val |KM|
tested val : |C| et array val |HA|
tested val : |C| et array val |GM|
tested val : |C| et array val |SZ|
tested val : |C| et array val |RU|
tested val : |C| et array val |AP|
tested val : |C| et array val |CA|
tested val : |C| et array val |FF|
tested val : |C| et array val |ST|
is header : -1 cmd : C
init sgf rules go
bs == 9
size ==  + size
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : Le jeu de Go se joue sur un plateau de 19 lignes et 19 colonnes.
Les pions noirs et blancs, appel√©s "pierres", sont jou√©s sur les intersections.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 1
x = 3 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 3
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 3, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : Noir joue le premier coup.
Ensuite, les deux joueurs jouent √† tour de r√¥le.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 1
x = 3 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
is header : 0 cmd : AW
set command : AW command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 10
x = 5 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 2), val: 0.0 cmd |AW|
coor == ( x: 5, y: 2), val: 0.0 cmd |AW|
coor == ( x: 5, y: 2), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 4), val: 0.0 cmd |AW|
coor == ( x: 7, y: 4), val: 0.0 cmd |AW|
coor == ( x: 7, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 1, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 1, y: 5), val: 0.0 cmd |AW|
coor == ( x: 1, y: 5), val: 0.0 cmd |AW|
coor == ( x: 1, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 4
x = 2 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 6, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 2, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 5), val: 0.0 cmd |AB|
coor == ( x: 2, y: 5), val: 0.0 cmd |AB|
coor == ( x: 2, y: 5), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 1, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 4
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 5, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : Une pierre a 4 libert√©s.
Lorsqu'elles sont toutes occup√©es, la pierre est captur√©e.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 14
x = 5 y = 0
rule == Go
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
x = 4 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
x = 6 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
x = 2 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 2), val: 0.0 cmd |AE|
coor == ( x: 2, y: 2), val: 0.0 cmd |AE|
coor == ( x: 2, y: 2), val: 0.0 cmd |AE|
x = 5 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
x = 5 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 4), val: 0.0 cmd |AE|
coor == ( x: 5, y: 4), val: 0.0 cmd |AE|
coor == ( x: 5, y: 4), val: 0.0 cmd |AE|
x = 6 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
x = 7 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
x = 1 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 1, y: 5), val: 0.0 cmd |AE|
coor == ( x: 1, y: 5), val: 0.0 cmd |AE|
coor == ( x: 1, y: 5), val: 0.0 cmd |AE|
x = 2 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 5), val: 0.0 cmd |AE|
coor == ( x: 2, y: 5), val: 0.0 cmd |AE|
coor == ( x: 2, y: 5), val: 0.0 cmd |AE|
x = 6 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
x = 4 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 6), val: 0.0 cmd |AE|
coor == ( x: 4, y: 6), val: 0.0 cmd |AE|
coor == ( x: 4, y: 6), val: 0.0 cmd |AE|
x = 5 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 6), val: 0.0 cmd |AE|
coor == ( x: 5, y: 6), val: 0.0 cmd |AE|
coor == ( x: 5, y: 6), val: 0.0 cmd |AE|
x = 5 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 7), val: 0.0 cmd |AE|
coor == ( x: 5, y: 7), val: 0.0 cmd |AE|
coor == ( x: 5, y: 7), val: 0.0 cmd |AE|
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 2
x = 0 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 5
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 0), val: 0.0 cmd |AB|
coor == ( x: 0, y: 0), val: 0.0 cmd |AB|
coor == ( x: 0, y: 0), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 0 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 5
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 5), val: 0.0 cmd |AB|
coor == ( x: 0, y: 5), val: 0.0 cmd |AB|
coor == ( x: 0, y: 5), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : Sur le bord, une pierre n‚Äôa que 3 libert√©s.
Dans un coin, elle n‚Äôen a que 2.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 2
x = 0 y = 0
rule == Go
coucou
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 0), val: 0.0 cmd |AE|
coor == ( x: 0, y: 0), val: 0.0 cmd |AE|
coor == ( x: 0, y: 0), val: 0.0 cmd |AE|
x = 0 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 5), val: 0.0 cmd |AE|
coor == ( x: 0, y: 5), val: 0.0 cmd |AE|
coor == ( x: 0, y: 5), val: 0.0 cmd |AE|
is header : 0 cmd : AW
set command : AW command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 4
x = 3 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 6
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 6
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 6
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 4), val: 0.0 cmd |AW|
coor == ( x: 4, y: 4), val: 0.0 cmd |AW|
coor == ( x: 4, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 3 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 6
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 5), val: 0.0 cmd |AW|
coor == ( x: 3, y: 5), val: 0.0 cmd |AW|
coor == ( x: 3, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : La pierre noire a √©t√© captur√©e.
Blanc marque ainsi 1 point.
Le suicide √©tant interdit, Noir a ici un coup ill√©gal.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 3
x = 3 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 7
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 3, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 7
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 3), val: 0.0 cmd |AB|
coor == ( x: 2, y: 3), val: 0.0 cmd |AB|
coor == ( x: 2, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 7
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 3), val: 0.0 cmd |AB|
coor == ( x: 4, y: 3), val: 0.0 cmd |AB|
coor == ( x: 4, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 2, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : La capture √©tant prioritaire sur le suicide,
Noir peut ici capturer la pierre blanche.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 2, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 1
x = 3 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 2, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 3), val: 0.0 cmd |AE|
coor == ( x: 3, y: 3), val: 0.0 cmd |AE|
coor == ( x: 3, y: 3), val: 0.0 cmd |AE|
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 1
x = 3 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 8
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 3, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
coor == ( x: 3, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 3, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
comment : Cette position m√®ne √† une r√©p√©tition infinie, La r√®gle interdit de rejouer exactement la m√™me position. Blanc doit donc jouer ailleurs.

Noir pourra ensuite soit connecter, soit r√©pondre √† Blanc, ce qui permettrait la reprise au coup suivant, puisque la position ne serait plus identique.

On appelle cela un "ko". Si Blanc joue un coup mena√ßant et force Noir √† r√©pondre, on parle alors de "menace de ko".
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 7
x = 3 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 2), val: 0.0 cmd |AE|
coor == ( x: 3, y: 2), val: 0.0 cmd |AE|
coor == ( x: 3, y: 2), val: 0.0 cmd |AE|
x = 2 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 3), val: 0.0 cmd |AE|
coor == ( x: 2, y: 3), val: 0.0 cmd |AE|
coor == ( x: 2, y: 3), val: 0.0 cmd |AE|
x = 4 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 3), val: 0.0 cmd |AE|
coor == ( x: 4, y: 3), val: 0.0 cmd |AE|
coor == ( x: 4, y: 3), val: 0.0 cmd |AE|
x = 2 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 4), val: 0.0 cmd |AE|
coor == ( x: 2, y: 4), val: 0.0 cmd |AE|
coor == ( x: 2, y: 4), val: 0.0 cmd |AE|
x = 3 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
coor == ( x: 3, y: 4), val: 0.0 cmd |AE|
x = 4 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 4), val: 0.0 cmd |AE|
coor == ( x: 4, y: 4), val: 0.0 cmd |AE|
coor == ( x: 4, y: 4), val: 0.0 cmd |AE|
x = 3 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 5), val: 0.0 cmd |AE|
coor == ( x: 3, y: 5), val: 0.0 cmd |AE|
coor == ( x: 3, y: 5), val: 0.0 cmd |AE|
is header : 0 cmd : AW
set command : AW command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 14
x = 5 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
coor == ( x: 5, y: 0), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 0), val: 0.0 cmd |AW|
coor == ( x: 7, y: 0), val: 0.0 cmd |AW|
coor == ( x: 7, y: 0), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 1), val: 0.0 cmd |AW|
coor == ( x: 5, y: 1), val: 0.0 cmd |AW|
coor == ( x: 5, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 5), val: 0.0 cmd |AW|
coor == ( x: 8, y: 5), val: 0.0 cmd |AW|
coor == ( x: 8, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 6), val: 0.0 cmd |AW|
coor == ( x: 7, y: 6), val: 0.0 cmd |AW|
coor == ( x: 7, y: 6), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 0 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 7), val: 0.0 cmd |AW|
coor == ( x: 0, y: 7), val: 0.0 cmd |AW|
coor == ( x: 0, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 1, y: 7), val: 0.0 cmd |AW|
coor == ( x: 1, y: 7), val: 0.0 cmd |AW|
coor == ( x: 1, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 7), val: 0.0 cmd |AW|
coor == ( x: 7, y: 7), val: 0.0 cmd |AW|
coor == ( x: 7, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 7, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 7, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 8, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 7), val: 0.0 cmd |AW|
coor == ( x: 8, y: 7), val: 0.0 cmd |AW|
coor == ( x: 8, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 1, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 1, y: 8), val: 0.0 cmd |AW|
coor == ( x: 1, y: 8), val: 0.0 cmd |AW|
coor == ( x: 1, y: 8), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 7, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 7, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 8), val: 0.0 cmd |AW|
coor == ( x: 7, y: 8), val: 0.0 cmd |AW|
coor == ( x: 7, y: 8), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
size == 18
x = 4 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 4, y: 0), val: 0.0 cmd |AB|
coor == ( x: 4, y: 0), val: 0.0 cmd |AB|
coor == ( x: 4, y: 0), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 4, y: 1), val: 0.0 cmd |AB|
coor == ( x: 4, y: 1), val: 0.0 cmd |AB|
coor == ( x: 4, y: 1), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 4, y: 2), val: 0.0 cmd |AB|
coor == ( x: 4, y: 2), val: 0.0 cmd |AB|
coor == ( x: 4, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? true
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? true
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 4
( x: 5, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 5, y: 2), val: 0.0 cmd |AB|
coor == ( x: 5, y: 2), val: 0.0 cmd |AB|
coor == ( x: 5, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 5, y: 1), val: 0.0 is capturable ? true
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 6, y: 2), val: 0.0 cmd |AB|
coor == ( x: 6, y: 2), val: 0.0 cmd |AB|
coor == ( x: 6, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 7, y: 1), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 7, y: 1), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 6
( x: 7, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 7, y: 1), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 7
( x: 8, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 8, y: 2), val: 0.0 cmd |AB|
coor == ( x: 8, y: 2), val: 0.0 cmd |AB|
coor == ( x: 8, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 7, y: 4), val: 0.0 cmd |AB|
coor == ( x: 7, y: 4), val: 0.0 cmd |AB|
coor == ( x: 7, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 8, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 8, y: 4), val: 0.0 cmd |AB|
coor == ( x: 8, y: 4), val: 0.0 cmd |AB|
coor == ( x: 8, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 7, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 7, y: 5), val: 0.0 cmd |AB|
coor == ( x: 7, y: 5), val: 0.0 cmd |AB|
coor == ( x: 7, y: 5), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 8, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 0 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 0, y: 6), val: 0.0 cmd |AB|
coor == ( x: 0, y: 6), val: 0.0 cmd |AB|
coor == ( x: 0, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 1, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 1, y: 6), val: 0.0 cmd |AB|
coor == ( x: 1, y: 6), val: 0.0 cmd |AB|
coor == ( x: 1, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 2, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 2, y: 6), val: 0.0 cmd |AB|
coor == ( x: 2, y: 6), val: 0.0 cmd |AB|
coor == ( x: 2, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 6, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 0, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? true
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? true
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 4
( x: 2, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 2, y: 7), val: 0.0 cmd |AB|
coor == ( x: 2, y: 7), val: 0.0 cmd |AB|
coor == ( x: 2, y: 7), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 7), val: 0.0 is capturable ? true
( x: 0, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 7), val: 0.0 is capturable ? true
( x: 8, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 7), val: 0.0 is capturable ? true
( x: 8, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 6, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 0, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 7), val: 0.0 is capturable ? true
( x: 8, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 5
( x: 2, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 2, y: 8), val: 0.0 cmd |AB|
coor == ( x: 2, y: 8), val: 0.0 cmd |AB|
coor == ( x: 2, y: 8), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 1, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 9
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 6, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 7, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
comment : Une zone compl√®tement ferm√©e est appel√©e un "≈ìil".
Un groupe ayant un seul ≈ìil peut √™tre captur√©.
Un groupe avec deux yeux est dit "vivant", car il ne peut jamais √™tre captur√©.
Attention aux "faux yeux" :
cela peut ressembler √† un ≈ìil, mais si une pierre peut y √™tre captur√©e, alors ce n‚Äôest pas un ≈ìil.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
size == 32
x = 4 y = 0
rule == Go
coucou
[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 4, y: 0), val: 0.0 cmd |AE|
coor == ( x: 4, y: 0), val: 0.0 cmd |AE|
coor == ( x: 4, y: 0), val: 0.0 cmd |AE|
x = 5 y = 0
rule == Go
coucou
[0, 0, 0, 0, 0, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
coor == ( x: 5, y: 0), val: 0.0 cmd |AE|
x = 7 y = 0
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 0), val: 0.0 cmd |AE|
coor == ( x: 7, y: 0), val: 0.0 cmd |AE|
coor == ( x: 7, y: 0), val: 0.0 cmd |AE|
x = 4 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
coor == ( x: 4, y: 1), val: 0.0 cmd |AE|
x = 5 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 5, y: 1), val: 0.0 cmd |AE|
coor == ( x: 5, y: 1), val: 0.0 cmd |AE|
coor == ( x: 5, y: 1), val: 0.0 cmd |AE|
x = 6 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
coor == ( x: 6, y: 1), val: 0.0 cmd |AE|
x = 7 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 1), val: 0.0 cmd |AE|
coor == ( x: 7, y: 1), val: 0.0 cmd |AE|
coor == ( x: 7, y: 1), val: 0.0 cmd |AE|
x = 8 y = 1
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 8, y: 1), val: 0.0 cmd |AE|
coor == ( x: 8, y: 1), val: 0.0 cmd |AE|
coor == ( x: 8, y: 1), val: 0.0 cmd |AE|
x = 4 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 4, y: 2), val: 0.0 cmd |AE|
coor == ( x: 4, y: 2), val: 0.0 cmd |AE|
coor == ( x: 4, y: 2), val: 0.0 cmd |AE|
x = 5 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
coor == ( x: 5, y: 2), val: 0.0 cmd |AE|
x = 6 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 6, y: 2), val: 0.0 cmd |AE|
coor == ( x: 6, y: 2), val: 0.0 cmd |AE|
coor == ( x: 6, y: 2), val: 0.0 cmd |AE|
x = 7 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 2), val: 0.0 cmd |AE|
coor == ( x: 7, y: 2), val: 0.0 cmd |AE|
coor == ( x: 7, y: 2), val: 0.0 cmd |AE|
x = 8 y = 2
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 8, y: 2), val: 0.0 cmd |AE|
coor == ( x: 8, y: 2), val: 0.0 cmd |AE|
coor == ( x: 8, y: 2), val: 0.0 cmd |AE|
x = 7 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
coor == ( x: 7, y: 4), val: 0.0 cmd |AE|
x = 8 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 8, y: 4), val: 0.0 cmd |AE|
coor == ( x: 8, y: 4), val: 0.0 cmd |AE|
coor == ( x: 8, y: 4), val: 0.0 cmd |AE|
x = 7 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 5), val: 0.0 cmd |AE|
coor == ( x: 7, y: 5), val: 0.0 cmd |AE|
coor == ( x: 7, y: 5), val: 0.0 cmd |AE|
x = 8 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 8, y: 5), val: 0.0 cmd |AE|
coor == ( x: 8, y: 5), val: 0.0 cmd |AE|
coor == ( x: 8, y: 5), val: 0.0 cmd |AE|
x = 0 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 0, y: 6), val: 0.0 cmd |AE|
coor == ( x: 0, y: 6), val: 0.0 cmd |AE|
coor == ( x: 0, y: 6), val: 0.0 cmd |AE|
x = 1 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 1, y: 6), val: 0.0 cmd |AE|
coor == ( x: 1, y: 6), val: 0.0 cmd |AE|
coor == ( x: 1, y: 6), val: 0.0 cmd |AE|
x = 2 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 2, y: 6), val: 0.0 cmd |AE|
coor == ( x: 2, y: 6), val: 0.0 cmd |AE|
coor == ( x: 2, y: 6), val: 0.0 cmd |AE|
x = 6 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
x = 7 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 6), val: 0.0 cmd |AE|
coor == ( x: 7, y: 6), val: 0.0 cmd |AE|
coor == ( x: 7, y: 6), val: 0.0 cmd |AE|
x = 0 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 0, y: 7), val: 0.0 cmd |AE|
coor == ( x: 0, y: 7), val: 0.0 cmd |AE|
coor == ( x: 0, y: 7), val: 0.0 cmd |AE|
x = 1 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 1, y: 7), val: 0.0 cmd |AE|
coor == ( x: 1, y: 7), val: 0.0 cmd |AE|
coor == ( x: 1, y: 7), val: 0.0 cmd |AE|
x = 2 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 2, y: 7), val: 0.0 cmd |AE|
coor == ( x: 2, y: 7), val: 0.0 cmd |AE|
coor == ( x: 2, y: 7), val: 0.0 cmd |AE|
x = 6 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
x = 7 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 7, y: 7), val: 0.0 cmd |AE|
coor == ( x: 7, y: 7), val: 0.0 cmd |AE|
coor == ( x: 7, y: 7), val: 0.0 cmd |AE|
x = 8 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 8, y: 7), val: 0.0 cmd |AE|
coor == ( x: 8, y: 7), val: 0.0 cmd |AE|
coor == ( x: 8, y: 7), val: 0.0 cmd |AE|
x = 1 y = 8
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 2, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 1, y: 8), val: 0.0 cmd |AE|
coor == ( x: 1, y: 8), val: 0.0 cmd |AE|
coor == ( x: 1, y: 8), val: 0.0 cmd |AE|
x = 2 y = 8
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 2, y: 8), val: 0.0 cmd |AE|
coor == ( x: 2, y: 8), val: 0.0 cmd |AE|
coor == ( x: 2, y: 8), val: 0.0 cmd |AE|
x = 6 y = 8
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 2, 0]
9
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
x = 7 y = 8
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 0]
9
coor == ( x: 7, y: 8), val: 0.0 cmd |AE|
coor == ( x: 7, y: 8), val: 0.0 cmd |AE|
coor == ( x: 7, y: 8), val: 0.0 cmd |AE|
is header : 0 cmd : AW
set command : AW command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 8
x = 6 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 3), val: 0.0 cmd |AW|
coor == ( x: 6, y: 3), val: 0.0 cmd |AW|
coor == ( x: 6, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 7, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 3), val: 0.0 cmd |AW|
coor == ( x: 7, y: 3), val: 0.0 cmd |AW|
coor == ( x: 7, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 8, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 3), val: 0.0 cmd |AW|
coor == ( x: 8, y: 3), val: 0.0 cmd |AW|
coor == ( x: 8, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 6, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 4), val: 0.0 cmd |AW|
coor == ( x: 6, y: 4), val: 0.0 cmd |AW|
coor == ( x: 6, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
coor == ( x: 6, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 6, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 6), val: 0.0 cmd |AW|
coor == ( x: 6, y: 6), val: 0.0 cmd |AW|
coor == ( x: 6, y: 6), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 7
( x: 6, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 7), val: 0.0 cmd |AW|
coor == ( x: 6, y: 7), val: 0.0 cmd |AW|
coor == ( x: 6, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 10
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 8
( x: 6, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 8), val: 0.0 cmd |AW|
coor == ( x: 6, y: 8), val: 0.0 cmd |AW|
coor == ( x: 6, y: 8), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
comment : Une autre fa√ßon de marquer des points est d‚Äôencercler une zone.
Chaque intersection vide compl√®tement entour√©e rapporte 1 point
au joueur qui l‚Äôa contr√¥l√©e.

Dans cet exemple, Blanc fait 10 points.
jep asse fdans l'exec d'un move : ?
is header : 0 cmd : AE
set command : AE command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
size == 8
x = 6 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 3), val: 0.0 cmd |AE|
coor == ( x: 6, y: 3), val: 0.0 cmd |AE|
coor == ( x: 6, y: 3), val: 0.0 cmd |AE|
x = 7 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 7, y: 3), val: 0.0 cmd |AE|
coor == ( x: 7, y: 3), val: 0.0 cmd |AE|
coor == ( x: 7, y: 3), val: 0.0 cmd |AE|
x = 8 y = 3
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 8, y: 3), val: 0.0 cmd |AE|
coor == ( x: 8, y: 3), val: 0.0 cmd |AE|
coor == ( x: 8, y: 3), val: 0.0 cmd |AE|
x = 6 y = 4
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
coor == ( x: 6, y: 4), val: 0.0 cmd |AE|
x = 6 y = 5
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
coor == ( x: 6, y: 5), val: 0.0 cmd |AE|
x = 6 y = 6
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
coor == ( x: 6, y: 6), val: 0.0 cmd |AE|
x = 6 y = 7
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
coor == ( x: 6, y: 7), val: 0.0 cmd |AE|
x = 6 y = 8
rule == Go
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
9
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
coor == ( x: 6, y: 8), val: 0.0 cmd |AE|
is header : 0 cmd : AW
set command : AW command type == ARRAY_VALUE
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
size == 21
x = 4 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 0), val: 0.0 cmd |AW|
coor == ( x: 4, y: 0), val: 0.0 cmd |AW|
coor == ( x: 4, y: 0), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
coor == ( x: 4, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
coor == ( x: 6, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
coor == ( x: 7, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
coor == ( x: 8, y: 1), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 2), val: 0.0 cmd |AW|
coor == ( x: 4, y: 2), val: 0.0 cmd |AW|
coor == ( x: 4, y: 2), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 6, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 6, y: 2), val: 0.0 cmd |AW|
coor == ( x: 6, y: 2), val: 0.0 cmd |AW|
coor == ( x: 6, y: 2), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 8, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 8, y: 2), val: 0.0 cmd |AW|
coor == ( x: 8, y: 2), val: 0.0 cmd |AW|
coor == ( x: 8, y: 2), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 3), val: 0.0 cmd |AW|
coor == ( x: 2, y: 3), val: 0.0 cmd |AW|
coor == ( x: 2, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 3 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
coor == ( x: 3, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 3), val: 0.0 cmd |AW|
coor == ( x: 4, y: 3), val: 0.0 cmd |AW|
coor == ( x: 4, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 4, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 6
( x: 4, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 3), val: 0.0 cmd |AW|
coor == ( x: 5, y: 3), val: 0.0 cmd |AW|
coor == ( x: 5, y: 3), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 0 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 0, y: 4), val: 0.0 cmd |AW|
coor == ( x: 0, y: 4), val: 0.0 cmd |AW|
coor == ( x: 0, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 1, y: 4), val: 0.0 cmd |AW|
coor == ( x: 1, y: 4), val: 0.0 cmd |AW|
coor == ( x: 1, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 7
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 7
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 2, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
coor == ( x: 2, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 10
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 10
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
coor == ( x: 5, y: 4), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 5), val: 0.0 cmd |AW|
coor == ( x: 4, y: 5), val: 0.0 cmd |AW|
coor == ( x: 4, y: 5), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 1
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
coor == ( x: 4, y: 6), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 2
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 7), val: 0.0 cmd |AW|
coor == ( x: 4, y: 7), val: 0.0 cmd |AW|
coor == ( x: 4, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 3
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
coor == ( x: 5, y: 7), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 4
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
9
coor == ( x: 4, y: 8), val: 0.0 cmd |AW|
coor == ( x: 4, y: 8), val: 0.0 cmd |AW|
coor == ( x: 4, y: 8), val: 0.0 cmd |AW|
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 2 adv color == 1 cehcked case color == 2
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : AB
set command : AB command type == ARRAY_VALUE
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
size == 19
x = 3 y = 0
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 3, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 3, y: 0), val: 0.0 cmd |AB|
coor == ( x: 3, y: 0), val: 0.0 cmd |AB|
coor == ( x: 3, y: 0), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 0), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 1, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 1, y: 1), val: 0.0 cmd |AB|
coor == ( x: 1, y: 1), val: 0.0 cmd |AB|
coor == ( x: 1, y: 1), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 3 y = 1
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 3, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 0, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 3, y: 1), val: 0.0 cmd |AB|
coor == ( x: 3, y: 1), val: 0.0 cmd |AB|
coor == ( x: 3, y: 1), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 2 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 2, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
coor == ( x: 2, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 3 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 4
( x: 3, y: 2), val: 0.0 is capturable ? true
( x: 2, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 0, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
coor == ( x: 3, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 2
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 7, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 0, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
coor == ( x: 7, y: 2), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 7, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 0 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 0, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[0, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 0, y: 3), val: 0.0 cmd |AB|
coor == ( x: 0, y: 3), val: 0.0 cmd |AB|
coor == ( x: 0, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 0, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 1 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? true
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? true
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 1, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 0, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 1, y: 3), val: 0.0 cmd |AB|
coor == ( x: 1, y: 3), val: 0.0 cmd |AB|
coor == ( x: 1, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 2, y: 3), val: 0.0 is capturable ? true
( x: 3, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 1, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 6, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 0, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 6, y: 3), val: 0.0 cmd |AB|
coor == ( x: 6, y: 3), val: 0.0 cmd |AB|
coor == ( x: 6, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 6, y: 2), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 7 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 7, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 0, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 7, y: 3), val: 0.0 cmd |AB|
coor == ( x: 7, y: 3), val: 0.0 cmd |AB|
coor == ( x: 7, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 8 y = 3
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 4
( x: 8, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 0]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 8, y: 3), val: 0.0 cmd |AB|
coor == ( x: 8, y: 3), val: 0.0 cmd |AB|
coor == ( x: 8, y: 3), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 8, y: 2), val: 0.0 is capturable ? true
( x: 8, y: 1), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 4 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 3), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 3), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 4, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 4, y: 4), val: 0.0 cmd |AB|
coor == ( x: 4, y: 4), val: 0.0 cmd |AB|
coor == ( x: 4, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 4, y: 3), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 4
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 5
( x: 6, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
coor == ( x: 6, y: 4), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 5
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 5, y: 5), val: 0.0 cmd |AB|
coor == ( x: 5, y: 5), val: 0.0 cmd |AB|
coor == ( x: 5, y: 5), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 5), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 11
( x: 5, y: 4), val: 0.0 is capturable ? true
( x: 5, y: 3), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 2
( x: 5, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
coor == ( x: 5, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 6
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 3
( x: 6, y: 6), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
coor == ( x: 6, y: 6), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 7
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 4
( x: 6, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
coor == ( x: 6, y: 7), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 5 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? true
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? true
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 1
( x: 5, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 0, 0, 0, 0]
9
coor == ( x: 5, y: 8), val: 0.0 cmd |AB|
coor == ( x: 5, y: 8), val: 0.0 cmd |AB|
coor == ( x: 5, y: 8), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 4, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 2
nb prisonners == 5
( x: 5, y: 7), val: 0.0 is capturable ? true
( x: 4, y: 7), val: 0.0 is capturable ? false
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
x = 6 y = 8
rule == Go
1111111111111111111111111111111111111111111111111111111111111111111111111111111
22222222222222222222222222222222222222222222222222222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333
PLAYING
 dans is valid move size == 11
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
--------------------------------------------------------------------------------
color == 2 adv color == 1 cehcked case color == 1
nb prisonners == 6
( x: 6, y: 8), val: 0.0 is capturable ? false
nb prisonners == 0
--------------------------------------------------------------------------------
4444444444444444444444444444444444444444444444444444444444444444444444444444444444
coucou
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
9
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
coor == ( x: 6, y: 8), val: 0.0 cmd |AB|
color == 1 adv color == 2 cehcked case color == 0
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
color == 1 adv color == 2 cehcked case color == 1
nb prisonners == 0
nb prisonners == 0
Rule est une instance de : org.interfacegui.GoRules
is header : 0 cmd : C
set command : C command type == STRING_VALUE
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
comment : Ceci est un exemple de partie termin√©e.

Aucun joueur n‚Äôa de coup int√©ressant √† jouer.
Les deux passent, puis on proc√®de au d√©compte des points.

S‚Äôil reste des groupes sans deux yeux dans le territoire adverse,
ils sont consid√©r√©s comme morts et retir√©s par le propri√©taire de la zone
avant le comptage final.
rule check 1
sgf rules == go
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 2, 0, 2, 0, 0]
[0, 0, 1, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 1, 2, 0]
[0, 2, 1, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 2, 1, 0, 0, 0, 0]
[0, 0, 2, 0, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 0, 0, 0, 0]
[0, 0, 2, 1, 2, 0, 0, 0, 0]
[0, 0, 0, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]




[0, 0, 0, 0, 1, 2, 0, 2, 0]
[0, 0, 0, 0, 1, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 1, 1, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1]
[0, 0, 0, 0, 0, 0, 0, 1, 2]
[1, 1, 1, 0, 0, 0, 1, 2, 0]
[2, 2, 1, 0, 0, 0, 1, 2, 2]
[0, 2, 1, 0, 0, 0, 1, 2, 0]




[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0]




[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]




 goban width == 606.0 heigh 487.0
on passe par ici constructeur home page
rules org.interfacegui.GoRules@64c0f00d
ruleset None
constructeur gomoku rule type == Go
height == 487 width == 606
_stones.length == 9 _stones[0].length == 9
Rectangles initialis√©s avec positions corrig√©es
			game info size 151
size x == 352 size y == 352
size x == 352 size y == 450
size x == 352 size y == 450
size x == 352 size y == 525
size x == 352 size y == 525
size x == 352 size y == 527
size x == 352 size y == 527
size x == 352 size y == 527
size x == 352 size y == 538
size x == 352 size y == 538
size x == 352 size y == 560
size x == 352 size y == 560
size x == 352 size y == 577
size x == 352 size y == 577
size x == 352 size y == 594
size x == 352 size y == 594
size x == 352 size y == 600
size x == 352 size y == 600
size x == 352 size y == 608
size x == 352 size y == 608
size x == 352 size y == 611
size x == 352 size y == 611
size x == 352 size y == 620
size x == 352 size y == 620
size x == 352 size y == 623
size x == 352 size y == 623
size x == 352 size y == 626
size x == 352 size y == 626
size x == 352 size y == 628
size x == 352 size y == 628
size x == 352 size y == 629
size x == 352 size y == 629
size x == 352 size y == 630
size x == 352 size y == 630
size x == 352 size y == 631
size x == 352 size y == 631
size x == 352 size y == 632
size x == 352 size y == 632
size x == 352 size y == 632
size x == 352 size y == 633
size x == 352 size y == 633
size x == 352 size y == 634
size x == 352 size y == 634
size x == 352 size y == 635
size x == 352 size y == 637
size x == 352 size y == 637
size x == 352 size y == 637
size x == 352 size y == 637
size x == 352 size y == 637
size x == 352 size y == 638
size x == 352 size y == 638
size x == 352 size y == 639
size x == 352 size y == 639
size x == 352 size y == 640
size x == 352 size y == 640
size x == 352 size y == 644
size x == 352 size y == 644
size x == 352 size y == 648
size x == 352 size y == 648
size x == 352 size y == 653
size x == 352 size y == 653
size x == 352 size y == 657
size x == 352 size y == 657
size x == 352 size y == 663
size x == 352 size y == 663
size x == 352 size y == 667
size x == 352 size y == 667
size x == 352 size y == 668
size x == 352 size y == 668
size x == 352 size y == 669
size x == 352 size y == 669
size x == 352 size y == 670
index == 0
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
map inde == 0 curent candidats == null
Le bouton next a √©t√© cliqu√© !
index == 1
[0, 0, 0, 1, 2, 0, 0, 0, 0]
[0, 1, 0, 1, 2, 0, 2, 2, 2]
[0, 0, 1, 1, 2, 0, 2, 1, 2]
[1, 1, 2, 2, 2, 2, 1, 1, 1]
[2, 2, 2, 0, 1, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
[0, 0, 0, 0, 2, 2, 1, 0, 0]
[0, 0, 0, 0, 2, 1, 1, 0, 0]
map inde == 1 curent candidats == null
Le bouton next a √©t√© cliqu√© !
map inde == 2 curent candidats == null
Le bouton prev a √©t√© cliqu√© !
map inde == 1 curent candidats == null
Le bouton prev a √©t√© cliqu√© !
